% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutual_exclusivity_functions.R
\name{mutual_exclusivity_pairwise}
\alias{mutual_exclusivity_pairwise}
\title{Determine whether two phenotypes are mutually exclusive.}
\usage{
mutual_exclusivity_pairwise(
  phenotype.a,
  phenotype.b,
  studies = NULL,
  charstates = NULL
)
}
\arguments{
\item{phenotype.a}{character or phenotype object, phenotype ID (IRI) if character, or
a phenotype object obtained by passing phenotype ID to as.phenotype() function.}

\item{phenotype.b}{character or phenotype object, phenotype ID (IRI) if character, or
a phenotype object obtained by passing phenotype ID to as.phenotype() function.}

\item{studies}{character, a vector of study IDs. This is an optional
parameter that acts as a filter in case
mutual exclusivity is to be based only on the evidence found in a particular set of studies.
The default is NULL, which means
that all studies present in the KB database will be considered for evidence.}

\item{charstates}{dataframe, a dataframe obtained from [charstates()] by
passing a list of the two phenotypes as argument.
phenotype objects. This optional parameter exists to speed up the computation
for the mutual_exclusivity_test() function since mutual_exclusivity_test()
repeatedly calls mutual_exclusivity_pairwise(). The default is NULL, and it is
not recommended to use this argument while using the mutual_exclusivity_pairwise()
function as passing this argument makes negligible runtime speedup but increases
the risk of getting a wrong output if the correct charstates dataframe
corresponding to the two input phenotypes is not passed.}
}
\value{
is_pair_mutually_exclusive character, the mutual exclusivity type among the two phenotypes.
}
\description{
The function expects the two phenotypes to be passed as two separate arguments, not as a vector.
The order in which the phenotypes are passed does not matter.
}
