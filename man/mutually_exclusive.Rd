% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutual_exclusivity_functions.R
\name{mutually_exclusive}
\alias{mutually_exclusive}
\title{Determine mutual exclusivity among two or more phenotypes.}
\usage{
mutually_exclusive(phenotypes, studies = NULL, progress_bar = FALSE)
}
\arguments{
\item{phenotypes}{character or phenotype, a vector of phenotype IDs, or
phenotype objects for which one wants to determine the mutual exclusivity.}

\item{studies}{character, a vector of study IDs (optional) if one is
interested in determining mutual exclusivity based on the evidence from a
particular set of studies.}

\item{progress_bar}{logical, whether to print progress of the function.

WARNING: setting progress_bar to TRUE clears the R console by executing the
cat('\014') command before printing the progress.}
}
\value{
A list consisting a matrix and a dataframe that contain mutual exclusivity
results for the phenotypes.
The mutual exclusivity type among two phenotypes is encoded as a factor with the following levels:

'strong_compatibility'  : if the two phenotypes share one or more character-state value(s),
they are mutually compatible (strong evidence).

'weak_compatibility'    : if the two phenotypes do not share any characters,
but there are taxa exhibiting both of their respective character states,
then they are mutually compatible (weak evidence).

'inconclusive_evidence' : default if no evidence supporting or contradicting
mutual exclusivity can be found.

'weak_exclusivity'      : if the two phenotypes do not share any characters,
and there are no taxa exhibiting both of their respective character states,
then they are mutually exclusive (weak evidence).

'strong_exclusivity'    : if the two phenotypes share one or more characters,
but do not share any states, then they are mutually exclusive (strong evidence).

The levels presented above also have the following order:
strong_compatibility < weak_compatibility < inconclusive_evidence < weak_exclusivity
    < strong_exclusivity

The default exclusivity type "inconclusive_evidence" is present at the center in the order.
The further away a level is from the center level, the stronger the evidence is
that is found to determine compatibility or exclusivity. Exclusivity has higher order because
that is the primary question one is interested to answer.

The first item in the list is a matrix which is square and whose size is
equal to the number of phenotypes.
Each cell of the matrix contains an integer value that informs about the mutual exclusivity
among the phenotypes corresponding to the row and the column of the cell.
The integers are numeric representation of the factor level for the mutual exclusivity type.

The second item in the list is a dataframe that contains five columns:
the labels and ids of each phenotype of a pair, and the mutual exclusivity
type of the pair. The fifth column 'mutual_exclusivity' contains the mutual exclusivity type.
}
\description{
The function computes mutual exclusion among all distinct pairs of phenotypes.
}
\examples{
# Example 1: pass phenotypes as characters with phenotype IDs
# get a specific study of interest based on which mutual exclusivity is to be determined
studies <- get_studies()
study <- studies$id[studies$label == 'Dillman et al. (2016)']

# get phenotypes ids present in the study
phenotypes <- get_phenotypes(study = study)
# select 10 phenotype ids randomly from those in the study
phenotypes_ids <- sample(phenotypes$id, 10)

# determine mutual exclusivity
exclusivity <- mutually_exclusive(phenotypes_ids)

# resultant matrix
exclusivity$matrix

# resultant dataframe
str(exclusivity$dataframe)

# filter dataframe to contain only mutually exclusive phenotypes
exclusivity_df <- exclusivity$dataframe
exclusive_phenotype_pairs <- exclusivity_df[
    exclusivity_df$mutual_exclusivity == "weak_exclusivity" |
    exclusivity_df$mutual_exclusivity == "strong_exclusivity", ]

# Example 2: pass phenotypes as phenotype objects
# sample some phenotypes objects present in the study
phenotypes_objs <- as.phenotype(sample(phenotypes$id, 4), withTaxa=TRUE)

# determine mutual exclusivity
exclusivity <- mutually_exclusive(phenotypes_objs)

# resultant matrix
exclusivity$matrix

# resultant dataframe
str(exclusivity$dataframe)

# Example 3: determine mutual exclusivity for two phenotypes
# fetch phenotypes for an entity/taxon combination
phenotypes <- get_phenotypes(entity="hyomandibular bone", taxon="Hypancistrus")

# select two phenotype ids based on the labels
phenotypes_ids <- c(
  phenotypes$id[phenotypes$label == 'hyomandibular bone in contact with prootic bone'],
  phenotypes$id[phenotypes$label == 'hyomandibular bone in contact with quadrate bone']
)

# determine mutual exclusivity
exclusivity <- mutually_exclusive(phenotypes_ids)

# exclusivity value
exclusivity$dataframe$mutual_exclusivity
}
